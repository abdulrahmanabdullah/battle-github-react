{"version":3,"sources":["components/Loading.js","components/Popular.js","utlis/api.js"],"names":["style","root","width","textAlign","margin","position","top","Loading","CircularProgress","variant","LanguageNav","selectedLang","onUpdateLang","languages","languageIcon","size","theme","Paper","square","elevation","Tabs","centered","value","indexOf","indicatorColor","textColor","height","onChange","map","lang","index","Tab","icon","label","key","onClick","Popular","state","selectLanguage","repo","error","setState","fetchPopularRepo","then","data","catch","err","console","warn","isLoading","this","Fragment","RepoCard","Component","useStyle","makeStyles","grid","padding","spacing","card","maxWidth","hash","backgroundColor","red","media","heigh","title","fontSize","cardContent","listRoot","display","alignItems","justifyContent","listIconStyle","Grid","container","justify","className","item","name","stargazers_count","watchers_count","owner","html_url","description","open_issues","forks","avatar_url","xs","sm","md","subGrid","Card","CardHeader","avatar","Avatar","href","CardMedia","component","image","CardContent","Typography","color","gutterBottom","noWrap","ListIcons","Badge","badgeContent","anchorOrigin","vertical","horizontal","toLocaleString","overlap","param","getErrorMessage","message","username","getProfile","fetch","res","json","profile","Error","getRepos","repos","calculateScore","followers","reduce","count","getStarsCount","getUserData","Promise","all","score","battle","players","results","sort","a","b","sortPlayer","language","endpoint","window","encodeURI","items"],"mappings":"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","file":"static/js/7.5d530697.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst style = {\n  root: {\n    width: '100%',\n    textAlign: 'center',\n    margin: '0 auto',\n    position: 'absolute',\n    top: '50%'\n  }\n};\nexport default function Loading() {\n  return (\n    <div style={style.root}>\n      <CircularProgress variant='indeterminate' />\n    </div>\n  );\n}\n\nLoading.propTypes = {};\n","import React, { Component } from 'react';\nimport Loading from './Loading';\nimport PropTypes from 'prop-types';\nimport { TConsumer } from '../context/theme';\nimport {\n  Grid,\n  Card,\n  CardContent,\n  CardHeader,\n  CardMedia,\n  Tabs,\n  Tab,\n  Paper,\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  Avatar,\n  Badge\n} from '@material-ui/core';\nimport { red } from '@material-ui/core/colors';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  FaJs,\n  FaPython,\n  FaReact,\n  FaStar,\n  FaCodeBranch,\n  FaExclamationTriangle,\n  FaEye\n} from 'react-icons/fa';\nimport { DiRuby } from 'react-icons/di';\nimport { fetchPopularRepo } from '../utlis/api';\n\nfunction LanguageNav({ selectedLang, onUpdateLang }) {\n  const languages = ['All', 'js', 'Python', 'ruby', 'react'];\n  const languageIcon = [\n    'all',\n    <FaJs size={25} />,\n    <FaPython size={25} />,\n    <DiRuby size={25} />,\n    <FaReact size={25} />\n  ];\n  return (\n    <TConsumer>\n      {({ theme }) => (\n        <Paper square elevation={1}>\n          <Tabs\n            centered\n            variant='fullWidth'\n            value={languages.indexOf(selectedLang)}\n            indicatorColor='primary'\n            textColor='primary'\n            style={{\n              height: '70px'\n            }}\n            onChange={() => onUpdateLang(selectedLang)}\n          >\n            {languages.map((lang, index) => (\n              <Tab\n                icon={index === 0 ? null : languageIcon[index]}\n                label={lang}\n                key={index}\n                onClick={() => onUpdateLang(lang)}\n              />\n            ))}\n          </Tabs>\n        </Paper>\n      )}\n    </TConsumer>\n  );\n}\n\nLanguageNav.propTypes = {\n  selectedLang: PropTypes.string.isRequired,\n  onUpdateLang: PropTypes.func.isRequired\n};\nexport default class Popular extends Component {\n  state = {\n    selectLanguage: 'All',\n    repo: {},\n    error: null\n  };\n\n  componentDidMount() {\n    this.onUpdateLang(this.state.selectLanguage);\n  }\n  onUpdateLang = selectLanguage => {\n    this.setState({ selectLanguage });\n    if (!this.state.repo[selectLanguage]) {\n      fetchPopularRepo(selectLanguage)\n        .then(data => {\n          this.setState(({ repo }) => ({\n            repo: {\n              ...repo,\n              [selectLanguage]: data\n            }\n          }));\n        })\n        .catch(err => {\n          console.warn(err);\n          this.setState({ error: err });\n        });\n    }\n  };\n  isLoading = () => {\n    const { selectLanguage, repo, error } = this.state;\n    return !repo[selectLanguage] && error === null;\n  };\n  render() {\n    const { selectLanguage, repo } = this.state;\n    return (\n      <React.Fragment>\n        <LanguageNav\n          selectedLang={selectLanguage}\n          onUpdateLang={this.onUpdateLang}\n        />\n        {this.isLoading() && <Loading />}\n        {repo[selectLanguage] && <RepoCard repo={repo[selectLanguage]} />}\n      </React.Fragment>\n    );\n  }\n}\nconst useStyle = makeStyles(theme => ({\n  grid: {\n    margin: '0 auto',\n    padding: theme.spacing(1)\n  },\n  card: {\n    maxWidth: 300\n  },\n  hash: {\n    backgroundColor: red[500]\n  },\n  media: {\n    heigh: 0,\n    width: 100,\n    margin: '0 auto',\n    padding: '52.5%'\n  },\n  title: {\n    fontSize: 14\n  },\n  cardContent: {\n    margin: 0,\n    padding: '10px'\n  },\n  listRoot: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-around'\n  },\n  listIconStyle: {\n    display: 'flex',\n    margin: 0,\n    padding: 0\n  }\n}));\n\nfunction RepoCard({ repo }) {\n  const style = useStyle();\n  return (\n    <Grid\n      container\n      justify='center'\n      alignItems='center'\n      spacing={4}\n      className={style.grid}\n    >\n      {repo.map((item, index) => {\n        const {\n          name,\n          stargazers_count,\n          watchers_count,\n          owner,\n          html_url,\n          description,\n          open_issues,\n          forks\n        } = item;\n        const { avatar_url } = owner;\n        return (\n          <Grid item xs sm md key={index} className={style.subGrid}>\n            <Card className={style.card}>\n              {/* Card header */}\n              <CardHeader\n                avatar={<Avatar className={style.hash}> {index + 1} </Avatar>}\n                title={name}\n              />\n              {/* Card media like img */}\n              <a href={html_url}>\n                <CardMedia\n                  title='avatar'\n                  component='image'\n                  image={avatar_url}\n                  className={style.media}\n                />\n              </a>\n              {/* Content */}\n              <CardContent>\n                <Typography\n                  variant='body2'\n                  color='textSecondary'\n                  component='p'\n                  gutterBottom\n                  noWrap\n                >\n                  {description}\n                </Typography>\n              </CardContent>\n              {/* Icons  */}\n              <CardContent className={style.cardContent}>\n                {\n                  <ListIcons\n                    watchers_count={watchers_count}\n                    stargazers_count={stargazers_count}\n                    open_issues={open_issues}\n                    forks={forks}\n                  />\n                }\n              </CardContent>\n            </Card>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n}\nfunction ListIcons({ stargazers_count, watchers_count, open_issues, forks }) {\n  const style = useStyle();\n  return (\n    <div className={style.listRoot}>\n      {/* Watchers  */}\n      <Badge\n        badgeContent={watchers_count}\n        color='primary'\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left'\n        }}\n      >\n        <FaEye size={29} color='rgb(255,191,116)' />\n      </Badge>\n\n      {/* Stars */}\n      <Badge\n        badgeContent={stargazers_count.toLocaleString()}\n        color='primary'\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left'\n        }}\n      >\n        <FaStar size={29} color='rgb(255,215,0)' />\n      </Badge>\n\n      {/* Forks */}\n      <Badge\n        badgeContent={forks}\n        color='primary'\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left'\n        }}\n      >\n        <FaCodeBranch size={29} color='rgb(129,195,245)' />\n      </Badge>\n\n      {/* Issues */}\n      <Badge\n        badgeContent={open_issues.toLocaleString()}\n        color='secondary'\n        overlap='rectangle'\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left'\n        }}\n      >\n        <FaExclamationTriangle size={29} color='rgb(249,138,147)' />\n      </Badge>\n    </div>\n  );\n}\n","const id = 'c3e5586e80700304c7ff';\nconst secret = 'a6473f631dc126db53fbed59aee3bd11f5f49458';\nconst param = `?client_id=${id}?client_secret=${secret}`;\n\n// show me the type's of error when user send his name\nfunction getErrorMessage(message, username) {\n  if (message === 'NOT FOUND') {\n    return ` ${username} doesn't exist`;\n  }\n  return message;\n}\n\n// get main details of user like name, stars , followers , url\n// This func return Promise\nfunction getProfile(username) {\n  return fetch(`https://api.github.com/users/${username}${param}`)\n    .then(res => res.json())\n    .then(profile => {\n      if (profile.message) {\n        throw new Error(getErrorMessage(profile.message, username));\n      }\n      return profile;\n    });\n}\n\n// Get 100 repo , also this return Promise\nfunction getRepos(username) {\n  return fetch(\n    `https://api.github.com/users/${username}/repos${param}&per_page=100`\n  )\n    .then(res => res.json())\n    .then(repos => {\n      if (repos.message) {\n        throw new Error(getErrorMessage(repos.message, username));\n      }\n      return repos;\n    });\n}\n\n// go through into each repo and count the stargazers of this repo\nfunction getStarsCount(repo) {\n  return repo.reduce(\n    (count, { stargazers_count }) => count + stargazers_count,\n    0\n  );\n}\nfunction calculateScore(followers, repo) {\n  return followers * 3 + getStarsCount(repo);\n}\n// This func merge two functions data then return profile and score for each username\nfunction getUserData(username) {\n  return Promise.all([getProfile(username), getRepos(username)]).then(\n    ([profile, repo]) => ({\n      profile,\n      score: calculateScore(profile.followers, repo)\n    })\n  );\n}\n\nfunction sortPlayer(players) {\n  return players.sort((a, b) => b.score - a.score);\n}\n\nexport function battle(players) {\n  return Promise.all([\n    getUserData(players[0]),\n    getUserData(players[1])\n  ]).then(results => sortPlayer(results));\n}\n\nexport function fetchPopularRepo(language) {\n  const endpoint = window.encodeURI(\n    `https://api.github.com/search/repositories?q=stars:>1+language:${language}&sort=stars&order=desc&type=Repositories`\n  );\n\n  return fetch(endpoint)\n    .then(res => res.json())\n    .then(data => {\n      if (!data.items) {\n        throw new Error(data.message);\n      }\n      return data.items;\n    });\n}\n"],"sourceRoot":""}